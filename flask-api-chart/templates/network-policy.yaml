apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "flask-api.fullname" . }}-mysql-policy
  labels:
    {{- include "flask-api.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: {{ .Release.Name }}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          {{- include "flask-api.selectorLabels" . | nindent 10 }}
    ports:
    - protocol: TCP
      port: 3306
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "flask-api.fullname" . }}-api-policy
  labels:
    {{- include "flask-api.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "flask-api.selectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    # Allow from ingress controller if any
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: ingress-nginx
    # Allow from inside same namespace
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 5000
  egress:
  # Allow egress to MySQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: {{ .Release.Name }}
    ports:
    - protocol: TCP
      port: 3306
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector: {}
  egress:
  # Allow DNS resolution from all pods
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
