replicaCount: 1

namespace: flask-api

image:
    repository: flask-api
    tag: latest
    # pullPolicy: IfNotPresent
    pullPolicy: Never

service:
    type: ClusterIP
    port: 80
    targetPort: 5000

resources:
    limits:
        cpu: 1000m
        memory: 1Gi
    requests:
        cpu: 500m
        memory: 512Mi

ingress:
    enabled: false
    className: ""
    annotations:
      # kubernetes.io/tls-acme: "true"
      # nginx.ingress.kubernetes.io/ssl-redirect: "false"
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: flask-api.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
    # - secretName: flask-api-tls
    #   hosts:
    #     - flask-api.local


serviceAccount:
    create: true
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

rbac:
    create: true

autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/metrics"

nodeSelector: {}
tolerations: []
affinity: {}

persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: ""

app:
    environment: "production"
    loglevel: "INFO"
    debug: false
    config: 
        PROMETHEUS_METRICS: "true"

monitoring:
    enabled: true
    serviceMonitor:
        enabled: true
        namespace: monitoring
        interval: 15s
    grafana:
        dashboards:
            namespace: monitoring
            enabled: true

prometheus:
    prometheusSpec:
        configMaps:
            - name: prometheus-config
        additionalScrapeConfigs:
            - job_name: 'kubernetes-pods'
              scrape_timeout: 30s
              kubernetes_sd_configs:
                  - role: pod

mysql:
    enabled: true
    auth:
        existingSecret: mysql-credentials
        database: strings_db
    primary:
        persistence:
            size: 8Gi
    initContainer:
            enabled: true

